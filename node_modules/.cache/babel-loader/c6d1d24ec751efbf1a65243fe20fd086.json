{"ast":null,"code":"import Swiper from \"swiper\";\nimport \"swiper/css/swiper.min.css\";\nexport default {\n  name: \"Carousel\",\n  props: [\"list\"],\n  watch: {\n    list: {\n      immediate: true,\n\n      handler() {\n        this.$nextTick(() => {\n          //初始化Swiper类的实例\n          var mySwiper = new Swiper(this.$refs.cur, {\n            //设置轮播图防线\n            direction: \"horizontal\",\n            //开启循环模式\n            loop: true,\n            // 如果需要分页器\n            pagination: {\n              el: \".swiper-pagination\",\n              //分页器类型\n              type: \"bullets\",\n              //点击分页器，切换轮播\n              clickable: true\n            },\n            //自动轮播\n            autoplay: {\n              delay: 1000,\n              //新版本的写法：目前是5版本\n              // pauseOnMouseEnter: true,\n              //如果设置为true，当切换到最后一个slide时停止自动切换\n              stopOnLastSlide: true,\n              //用户操作swiper之后，是否禁止autoplay\n              disableOnInteraction: false\n            },\n            // 如果需要前进后退按钮\n            navigation: {\n              nextEl: \".swiper-button-next\",\n              prevEl: \".swiper-button-prev\"\n            } //切换效果\n            // effect: \"cube\",\n\n          }); //1:swiper插件,对外暴露一个Swiper构造函数\n          //2:Swiper构造函数需要传递参数 1、结构总根节点CSS选择器|根节点真实DOM节点  2、轮播图配置项\n          //鼠标进入停止轮播\n\n          mySwiper.el.onmouseover = function () {\n            mySwiper.autoplay.stop();\n          }; //鼠标离开开始轮播\n\n\n          mySwiper.el.onmouseout = function () {\n            mySwiper.autoplay.start();\n          };\n        });\n      }\n\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}