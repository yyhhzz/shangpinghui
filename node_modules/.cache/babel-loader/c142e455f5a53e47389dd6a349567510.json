{"ast":null,"code":"import Swiper from \"swiper\";\nimport \"swiper/css/swiper.min.css\";\nexport default {\n  name: \"Carousel\",\n  props: [\"list\"],\n  watch: {\n    list: {\n      immediate: true,\n\n      handler() {\n        this.$nextTick(() => {\n          //初始化Swiper类的实例\n          var mySwiper = new Swiper(this.$refs.floor1Swiper, {\n            //设置轮播图防线\n            direction: \"horizontal\",\n            //开启循环模式\n            loop: true,\n            // 如果需要分页器\n            pagination: {\n              el: \".swiper-pagination\",\n              //分页器类型\n              type: \"bullets\",\n              //点击分页器，切换轮播\n              clickable: true\n            },\n            //自动轮播\n            autoplay: {\n              delay: 1000,\n              //新版本的写法：目前是5版本\n              // pauseOnMouseEnter: true,\n              //如果设置为true，当切换到最后一个slide时停止自动切换\n              stopOnLastSlide: true,\n              //用户操作swiper之后，是否禁止autoplay\n              disableOnInteraction: false\n            },\n            // 如果需要前进后退按钮\n            navigation: {\n              nextEl: \".swiper-button-next\",\n              prevEl: \".swiper-button-prev\"\n            } //切换效果\n            // effect: \"cube\",\n\n          }); //1:swiper插件,对外暴露一个Swiper构造函数\n          //2:Swiper构造函数需要传递参数 1、结构总根节点CSS选择器|根节点真实DOM节点  2、轮播图配置项\n          //鼠标进入停止轮播\n\n          mySwiper.el.onmouseover = function () {\n            mySwiper.autoplay.stop();\n          }; //鼠标离开开始轮播\n\n\n          mySwiper.el.onmouseout = function () {\n            mySwiper.autoplay.start();\n          };\n        });\n      }\n\n    }\n  }\n};","map":{"version":3,"mappings":"AAiBA;AACA;AAEA;EACAA,gBADA;EAEAC,eAFA;EAGAC;IACAC;MACAC,eADA;;MAEAC;QACA;UACA;UACA,0BACA,uBADA,EAEA;YACA;YACAC,uBAFA;YAGA;YACAC,UAJA;YAKA;YACAC;cACAC,wBADA;cAEA;cACAC,eAHA;cAIA;cACAC;YALA,CANA;YAaA;YACAC;cACAC,WADA;cAEA;cACA;cACA;cACAC,qBALA;cAMA;cACAC;YAPA,CAdA;YAuBA;YACAC;cACAC,6BADA;cAEAC;YAFA,CAxBA,CA4BA;YACA;;UA7BA,CAFA,EAFA,CAqCA;UACA;UACA;;UACAC;YACAA;UACA,CAFA,CAxCA,CA2CA;;;UACAA;YACAA;UACA,CAFA;QAGA,CA/CA;MAgDA;;IAnDA;EADA;AAHA","names":["name","props","watch","list","immediate","handler","direction","loop","pagination","el","type","clickable","autoplay","delay","stopOnLastSlide","disableOnInteraction","navigation","nextEl","prevEl","mySwiper"],"sourceRoot":"src/components/Carousel","sources":["index.vue"],"sourcesContent":["<template>\n  <div class=\"swiper-container\" id=\"mySwiper\">\n    <div class=\"swiper-wrapper\">\n      <div class=\"swiper-slide\" v-for=\"(carousel, index) in list\" :key=\"carousel.id\">\n        <img :src=\"carousel.imgUrl\" />\n      </div>\n    </div>\n    <!-- 如果需要分页器 -->\n    <div class=\"swiper-pagination\"></div>\n\n    <!-- 如果需要导航按钮 -->\n    <div class=\"swiper-button-prev\"></div>\n    <div class=\"swiper-button-next\"></div>\n  </div>\n</template>\n\n<script>\nimport Swiper from \"swiper\";\nimport \"swiper/css/swiper.min.css\";\n\nexport default {\n  name: \"Carousel\",\n  props: [\"list\"],\n  watch: {\n    list: {\n      immediate: true,\n      handler() {\n        this.$nextTick(() => {\n          //初始化Swiper类的实例\n          var mySwiper = new Swiper(\n           this.$refs.floor1Swiper,\n            {\n              //设置轮播图防线\n              direction: \"horizontal\",\n              //开启循环模式\n              loop: true,\n              // 如果需要分页器\n              pagination: {\n                el: \".swiper-pagination\",\n                //分页器类型\n                type: \"bullets\",\n                //点击分页器，切换轮播\n                clickable: true,\n              },\n              //自动轮播\n              autoplay: {\n                delay: 1000,\n                //新版本的写法：目前是5版本\n                // pauseOnMouseEnter: true,\n                //如果设置为true，当切换到最后一个slide时停止自动切换\n                stopOnLastSlide: true,\n                //用户操作swiper之后，是否禁止autoplay\n                disableOnInteraction: false,\n              },\n              // 如果需要前进后退按钮\n              navigation: {\n                nextEl: \".swiper-button-next\",\n                prevEl: \".swiper-button-prev\",\n              },\n              //切换效果\n              // effect: \"cube\",\n            }\n          );\n\n          //1:swiper插件,对外暴露一个Swiper构造函数\n          //2:Swiper构造函数需要传递参数 1、结构总根节点CSS选择器|根节点真实DOM节点  2、轮播图配置项\n          //鼠标进入停止轮播\n          mySwiper.el.onmouseover = function () {\n            mySwiper.autoplay.stop();\n          };\n          //鼠标离开开始轮播\n          mySwiper.el.onmouseout = function () {\n            mySwiper.autoplay.start();\n          };\n        });\n      },\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]},"metadata":{},"sourceType":"module"}