{"ast":null,"code":"import { mapGetters } from \"vuex\";\nimport SearchSelector from \"./SearchSelector/SearchSelector\";\nimport Pagination from \"@/components/Pagination\";\nexport default {\n  name: \"Search\",\n\n  data() {\n    return {\n      // 带给服务器参数\n      searchParams: {\n        category1Id: \"\",\n        //一级分类的id\n        category2Id: \"\",\n        //二级分类的id\n        category3Id: \"\",\n        //三级分类的id\n        categoryName: \"\",\n        //商品的名字\n        keyword: \"\",\n        //用户搜索的关键字\n        props: [],\n        //商品属性的搜索条件\n        trademark: \"\",\n        //品牌的搜索条件\n        order: \"1:desc\",\n        //排序的参数 【默认初始值:1:desc】\n        pageNo: 1,\n        //当前分页器的页码  【默认初始值:1】\n        pageSize: 5 //代表当前一页显示几条数据 【默认初始值:10】\n\n      }\n    };\n  },\n\n  components: {\n    SearchSelector,\n    Pagination\n  },\n\n  beforeMount() {\n    Object.assign(this.searchParams, this.$route.query, this.$route.params); // this.searchParams.category1Id = this.$route.query.category1Id;\n    // this.searchParams.category2Id = this.$route.query.category2Id;\n    // this.searchParams.category3Id = this.$route.query.category3Id;\n    // this.searchParams.categoryName = this.$route.query.categoryName;\n  },\n\n  mounted() {\n    this.getData();\n  },\n\n  computed: { ...mapGetters([\"goodsList\", \"total\"]),\n\n    isOne() {\n      return this.searchParams.order.indexOf(\"1\") != -1;\n    },\n\n    isTwo() {\n      return this.searchParams.order.indexOf(\"2\") != -1;\n    },\n\n    // 图标向下\n    isDesc() {\n      return this.searchParams.order.indexOf(\"desc\") != -1;\n    }\n\n  },\n  methods: {\n    getData() {\n      this.$store.dispatch(\"getSearchList\", this.searchParams);\n    },\n\n    removeCategoryName() {\n      this.searchParams.categoryName = '';\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined; // 再次发请求\n\n      this.getData(); // 面包屑删除后路由跳转\n\n      this.$router.push({\n        name: 'search',\n        params: this.$route.params\n      });\n    },\n\n    removeKeyword() {\n      this.searchParams.keyword = undefined;\n      this.getData(); // 通知兄弟组件Header清除关键字\n\n      this.$bus.$emit(\"clearKeyword\");\n      this.$router.push({\n        name: 'search',\n        query: this.$route.query\n      });\n    },\n\n    //子组件给父组件传递数据的自定义事件的回调\n    getTradeMark(tmId, tmName) {\n      //整理品牌相关的搜索条件\n      this.searchParams.trademark = `${tmId}:${tmName}`; //再次发请求即可\n\n      this.getData();\n    },\n\n    //面包屑清除品牌回调\n    removeTradeMark() {\n      //清空品牌的搜索条件\n      this.searchParams.trademark = \"\"; //再次发请求获取最新的数据展示\n\n      this.getData();\n    },\n\n    // 获取索引值\n    getAttrInfo(attrId, attrName, attrValue) {\n      //整理最新的搜索的条件\n      //整理为字符串\n      let newProps = `${attrId}:${attrValue}:${attrName}`;\n\n      if (this.searchParams.props.indexOf(newProps) == -1) {\n        this.searchParams.props.push(newProps);\n        this.getData();\n      }\n    },\n\n    // 删除属性\n    removeAttrValue(index) {\n      this.searchParams.props.splice(index, 1);\n      this.getData();\n    },\n\n    // 商品排序\n    sort(flag) {\n      //获取每一次order初始值,与用户点击传递进来的flag进行判断\n      let originFlag = this.searchParams.order.split(\":\")[0];\n      let originSortType = this.searchParams.order.split(\":\")[1]; //准备一个新的数值，将来赋值给order\n\n      let newOrder = \"\"; //高亮的判断\n\n      if (flag == originFlag) {\n        newOrder = `${originFlag}:${originSortType == \"desc\" ? \"asc\" : \"desc\"}`;\n      } else {\n        //不是高亮的按钮 首次默认降序\n        newOrder = `${flag}:desc`;\n      } //重新给order赋予新的数值\n\n\n      this.searchParams.order = newOrder; //重新发一次请求\n\n      this.getData();\n    },\n\n    // 自定义事件回调，获取当前页\n    getPageNo(pageNo) {\n      this.searchParams.pageNo = pageNo;\n      this.getData();\n    }\n\n  },\n  watch: {\n    $route() {\n      // 每次重新查询前要把之前的信息清空\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined; // 重新整理数据\n\n      Object.assign(this.searchParams, this.$route.query, this.$route.params);\n      this.getData();\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}